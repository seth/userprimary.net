At the end of last week I was trying to run a release of a Maven2-based project.  This involves the "mvn release:prepare" and "mvn release:perform" commands.  While running the perform step, the project's javadoc creation was triggered and this hung the build entirely.  The javadoc builder went out to lunch while using 100% of one of my CPUs.  Lovely.

A colleague suggested switching from the Apple JVM to the <a href="http://landonf.bikemonkey.org/static/soylatte/">soylatte JVM</a>.  I tried this and not only did the build not hang, but the build went noticeably faster.  So I've switched to soylatte as my default JVM on my MacBook.   I did a slightly more scientific speed comparison by recording how long it took to do a "mvn clean test" for a few of the projects I worked on and didn't see any significant difference between the two JVMs.  So whatever difference I saw was either specific to javadoc or a result of disk cache, etc.

<!-- technorati tags start --><p style="text-align:right;font-size:10px;">Technorati Tags: <a href="http://www.technorati.com/tag/java" rel="tag">java</a>, <a href="http://www.technorati.com/tag/programming" rel="tag">programming</a></p><!-- technorati tags end -->
